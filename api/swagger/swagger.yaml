swagger: '2.0'
info:
  description: 'TMForum Customer Management API w/NodeJs'
  version: '2.0'
  title: API CustomerManagement
#host: env-0693795.jelastic.servint.net
produces:
  - application/json
consumes:
  - application/json
host: localhost:10010
basePath: /v2
schemes:
  - http
paths:
  /swagger:
    x-swagger-pipe: swagger_raw
  /customer:
    # binds swagger app logic to a route
    x-swagger-router-controller: customer
    post:
      tags:
        - customer
      # uses as method name of the controller
      operationId: customerCreate
      summary: customerCreate
      description: 'add a new customer'
      deprecated: false
      parameters:
        - name: customer
          in: body
          required: true
          schema:
            $ref: '#/definitions/Customer'
      responses:
        '201':
          description: Customer
          schema:
            $ref: '#/definitions/Customer'
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      tags:
        - customer
      # uses as method name of the controller
      operationId: customerFind
      summary: customerFind
      description: 'returns list of customers'
      deprecated: false
      parameters:
        - name: fields
          in: query
          required: false
          description: ''
          type: string
      responses:
        '200':
          description: List of Customer
          schema:
            type: array
            items:
              $ref: '#/definitions/Customer'
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  '/customer/{customerId}':
    delete:
      tags:
        - customer
      # uses as method name of the controller
      operationId: customerDelete
      summary: customerDelete
      description: ''
      deprecated: false
      parameters:
        - name: customerId
          in: path
          required: true
          type: string
      responses:
        '204':
          description: Success
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      tags:
        - customer
      # uses as method name of the controller
      operationId: customerGet
      summary: customerGet
      description: ''
      deprecated: false
      parameters:
        - name: customerId
          in: path
          required: true
          type: string
        - name: fields
          in: query
          required: false
          description: ''
          type: string
      responses:
        '200':
          description: Customer
          schema:
            $ref: '#/definitions/Customer'
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    patch:
      tags:
        - customer
      # uses as method name of the controller
      operationId: customerPatch
      summary: customerPatch
      description: ''
      deprecated: false
      parameters:
        - name: customerId
          in: path
          required: true
          type: string
        - name: customer
          in: body
          required: true
          schema:
            $ref: '#/definitions/Customer'
      responses:
        '200':
          description: Success Customer
          schema:
            $ref: '#/definitions/Customer'
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - customer
      # uses as method name of the controller
      operationId: customerUpdate
      summary: customerUpdate
      description: ''
      deprecated: false
      parameters:
        - name: customerId
          in: path
          required: true
          type: string
        - name: customer
          in: body
          required: true
          schema:
            $ref: '#/definitions/Customer'
      responses:
        '201':
          description: Success Customer
          schema:
            $ref: '#/definitions/Customer'
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /customerAccount:
    # binds swagger app logic to a route
    x-swagger-router-controller: customerAccount
    post:
      tags:
        - customerAccount
      # uses as method name of the controller
      operationId: customerAccountCreate
      summary: customerAccountCreate
      description: ''
      deprecated: false
      parameters:
        - name: customerAccount
          in: body
          required: true
          schema:
            $ref: '#/definitions/CustomerAccount'
      responses:
        '201':
          description: CustomerAccount
          schema:
            $ref: '#/definitions/CustomerAccount'
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      tags:
        - customerAccount
      operationId: customerAccountFind
      summary: customerAccountFind
      description: ''
      deprecated: false
      parameters:
        - name: fields
          in: query
          required: false
          description: ''
          type: string
      responses:
        '200':
          description: List of CustomerAccount
          schema:
            type: array
            items:
              $ref: '#/definitions/CustomerAccount'
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  '/customerAccount/{customerAccountId}':
    delete:
      tags:
        - customerAccount
      operationId: customerAccountDelete
      summary: customerAccountDelete
      description: ''
      deprecated: false
      parameters:
        - name: customerAccountId
          in: path
          required: true
          type: string
      responses:
        '204':
          description: Success
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      tags:
        - customerAccount
      operationId: customerAccountGet
      summary: customerAccountGet
      description: ''
      deprecated: false
      parameters:
        - name: customerAccountId
          in: path
          required: true
          type: string
        - name: fields
          in: query
          required: false
          description: ''
          type: string
      responses:
        '200':
          description: CustomerAccount
          schema:
            $ref: '#/definitions/CustomerAccount'
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    patch:
      tags:
        - customerAccount
      operationId: customerAccountPatch
      summary: customerAccountPatch
      description: ''
      deprecated: false
      parameters:
        - name: customerAccountId
          in: path
          required: true
          type: string
        - name: customerAccount
          in: body
          required: true
          schema:
            $ref: '#/definitions/CustomerAccount'
      responses:
        '200':
          description: Success CustomerAccount
          schema:
            $ref: '#/definitions/CustomerAccount'
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - customerAccount
      operationId: customerAccountUpdate
      summary: customerAccountUpdate
      description: ''
      deprecated: false
      parameters:
        - name: customerAccountId
          in: path
          required: true
          type: string
        - name: customerAccount
          in: body
          required: true
          schema:
            $ref: '#/definitions/CustomerAccount'
      responses:
        '201':
          description: Success CustomerAccount
          schema:
            $ref: '#/definitions/CustomerAccount'
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /paymentMean:
    # binds swagger app logic to a route
    x-swagger-router-controller: paymentMean
    post:
      tags:
        - paymentMean
      operationId: paymentMeanCreate
      summary: paymentMeanCreate
      description: ''
      deprecated: false
      parameters:
        - name: paymentMean
          in: body
          required: true
          schema:
            $ref: '#/definitions/PaymentMean'
      responses:
        '201':
          description: PaymentMean
          schema:
            $ref: '#/definitions/PaymentMean'
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      tags:
        - paymentMean
      operationId: paymentMeanFind
      summary: paymentMeanFind
      description: ''
      deprecated: false
      parameters:
        - name: fields
          in: query
          required: false
          description: ''
          type: string
      responses:
        '200':
          description: List of PaymentMean
          schema:
            type: array
            items:
              $ref: '#/definitions/PaymentMean'
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  '/paymentMean/{paymentMeanId}':
    delete:
      tags:
        - paymentMean
      operationId: paymentMeanDelete
      summary: paymentMeanDelete
      description: ''
      deprecated: false
      parameters:
        - name: paymentMeanId
          in: path
          required: true
          type: string
      responses:
        '204':
          description: Success
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      tags:
        - paymentMean
      operationId: paymentMeanGet
      summary: paymentMeanGet
      description: ''
      deprecated: false
      parameters:
        - name: paymentMeanId
          in: path
          required: true
          type: string
        - name: fields
          in: query
          required: false
          description: ''
          type: string
      responses:
        '200':
          description: PaymentMean
          schema:
            $ref: '#/definitions/PaymentMean'
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    patch:
      tags:
        - paymentMean
      operationId: paymentMeanPatch
      summary: paymentMeanPatch
      description: ''
      deprecated: false
      parameters:
        - name: paymentMeanId
          in: path
          required: true
          type: string
        - name: paymentMean
          in: body
          required: true
          schema:
            $ref: '#/definitions/PaymentMean'
      responses:
        '200':
          description: Success PaymentMean
          schema:
            $ref: '#/definitions/PaymentMean'
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - paymentMean
      operationId: paymentMeanUpdate
      summary: paymentMeanUpdate
      description: ''
      deprecated: false
      parameters:
        - name: paymentMeanId
          in: path
          required: true
          type: string
        - name: paymentMean
          in: body
          required: true
          schema:
            $ref: '#/definitions/PaymentMean'
      responses:
        '201':
          description: Success PaymentMean
          schema:
            $ref: '#/definitions/PaymentMean'
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /hub:
    # binds swagger app logic to a route
    x-swagger-router-controller: hub
    post:
      tags:
        - hub
      operationId: hubCreate
      summary: hubCreate
      description: ''
      deprecated: false
      parameters:
        - name: hub
          in: body
          required: true
          schema:
            $ref: '#/definitions/Hub'
      responses:
        '201':
          description: Hub
          schema:
            $ref: '#/definitions/Hub'
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      tags:
        - hub
      operationId: hubFind
      summary: hubFind
      description: ''
      deprecated: false
      responses:
        '200':
          description: List of Hub
          schema:
            type: array
            items:
              $ref: '#/definitions/Hub'
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  '/hub/{hubId}':
    delete:
      tags:
        - hub
      operationId: hubDelete
      summary: hubDelete
      description: ''
      deprecated: false
      parameters:
        - name: hubId
          in: path
          required: true
          type: string
      responses:
        '204':
          description: Success
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      tags:
        - hub
      operationId: hubGet
      summary: hubGet
      description: ''
      deprecated: false
      parameters:
        - name: hubId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Hub
          schema:
            $ref: '#/definitions/Hub'
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
definitions:
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  Customer:
    type: object
    properties:
      id:
        type: integer
        format: int64
      href:
        type: string
      name:
        type: string
      status:
        type: string
      description:
        type: string
      validFor:
        $ref: '#/definitions/ValidFor'
      customerRank:
        type: string
      relatedParty:
        $ref: '#/definitions/Reference'
      characteristic:
        type: array
        items:
          $ref: '#/definitions/Characteristic'
      contactMedium:
        type: array
        items:
          $ref: '#/definitions/ContactMedium'
      customerAccount:
        type: array
        items:
          $ref: '#/definitions/CustomerAccount'
      customerCreditProfile:
        type: array
        items:
          $ref: '#/definitions/CustomerCreditProfile'
      paymentMean:
        type: array
        items:
          $ref: '#/definitions/PaymentMean'
  CustomerAccount:
    type: object
    properties:
      id:
        type: integer
        format: int64
      href:
        type: string
      name:
        type: string
      description:
        type: string
      status:
        type: string
      accountType:
        type: string
      creditLimit:
        type: string
      pin:
        type: string
      receivableBalance:
        type: number
        format: float
      customerAccountTaxExemption:
        type: array
        items:
          $ref: '#/definitions/CustomerAccountTaxExemption'
      customerAccountRelationship:
        type: array
        items:
          $ref: '#/definitions/CustomerAccountRelationship'
      contact:
        type: array
        items:
          $ref: '#/definitions/Contact'
      customer:
        $ref: '#/definitions/CustomerRef'
      customerAccountBalance:
        type: array
        items:
          $ref: '#/definitions/CustomerAccountBalance'
      paymentPlan:
        type: array
        items:
          $ref: '#/definitions/PaymentPlan'
      lastModified:
        type: string
        format: date-time
  CustomerCreditProfile:
    type: object
    properties:
      creditProfileDate:
        type: string
        format: date-time
      validFor:
        $ref: '#/definitions/ValidFor'
      creditRiskRating:
        type: string
      creditScore:
        type: string
  ContactMedium:
    type: object
    properties:
      type:
        type: string
      validFor:
        $ref: '#/definitions/ValidFor'
      medium:
        $ref: '#/definitions/Medium'
      preferred:
        type: string
  Medium:
    type: object
    properties:
      city:
        type: string
      country:
        type: string
      emailAddress:
        type: string
      type:
        type: string
      number:
        type: string
      postcode:
        type: string
      stateOrProvince:
        type: string
      streetOne:
        type: string
      streetTwo:
        type: string
  PaymentMean:
    type: object
    properties:
      id:
        type: integer
        format: int64
      href:
        type: string
      name:
        type: string
      validFor:
        $ref: '#/definitions/ValidFor'
      type:
        type: string
      bankAccount:
        $ref: '#/definitions/BankAccount'
      relatedParty:
        $ref: '#/definitions/Reference'
      creditCard:
        $ref: '#/definitions/CreditCard'
  Characteristic:
    type: object
    properties:
      name:
        type: string
      value:
        type: string
  Reference:
    type: object
    properties:
      id:
        type: string
      href:
        type: string
      role:
        type: string
      name:
        type: string
  ValidFor:
    type: object
    properties:
      startDateTime:
        type: string
        format: date-time
      endDateTime:
        type: string
        format: date-time
  CustomerAccountBalance:
    type: object
    properties:
      type:
        type: string
      amount:
        type: number
        format: float
      validFor:
        $ref: '#/definitions/ValidFor'
      status:
        type: string
  PaymentPlan:
    type: object
    properties:
      status:
        type: string
      type:
        type: string
      priority:
        type: string
      amount:
        type: number
        format: float
      paymentFrequency:
        type: string
      numberOfPayments:
        type: string
      validFor:
        $ref: '#/definitions/ValidFor'
      paymentMean:
        $ref: '#/definitions/PaymentMeanRef'
  Contact:
    type: object
    properties:
      contactType:
        type: string
      validFor:
        $ref: '#/definitions/ValidFor'
      contactName:
        type: string
      partyRoleType:
        type: string
      contactMedium:
        type: array
        items:
          $ref: '#/definitions/ContactMedium'
      relatedParty:
        $ref: '#/definitions/Reference'
  CustomerAccountRelationship:
    type: object
    properties:
      relationshipType:
        type: string
      validFor:
        $ref: '#/definitions/ValidFor'
      customerAccount:
        type: array
        items:
          $ref: '#/definitions/CustomerAccountRef'
  CustomerAccountTaxExemption:
    type: object
    properties:
      issuingJurisdiction:
        type: string
      certificateNumber:
        type: string
      reason:
        type: string
      validFor:
        $ref: '#/definitions/ValidFor'
  CreditCard:
    type: object
    properties:
      creditCardHolder:
        type: string
      type:
        type: string
      number:
        type: string
      expirationDate:
        type: string
        format: date-time
  BankAccount:
    type: object
    properties:
      bIC:
        type: string
      domiciliation:
        type: string
      iBAN:
        type: string
      accountHolder:
        type: string
  PaymentMeanRef:
    type: object
    properties:
      id:
        type: string
      href:
        type: string
      name:
        type: string
  CustomerAccountRef:
    type: object
    properties:
      id:
        type: string
      href:
        type: string
      name:
        type: string
      description:
        type: string
      status:
        type: string
  CustomerRef:
    type: object
    properties:
      id:
        type: string
      href:
        type: string
      name:
        type: string
      description:
        type: string
  Hub:
    type: object
    properties:
      id:
        type: string
      callback:
        type: string
      query:
        type: string
